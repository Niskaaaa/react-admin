[{"G:\\react\\react-admin\\src\\index.js":"1","G:\\react\\react-admin\\src\\reportWebVitals.js":"2","G:\\react\\react-admin\\src\\App.js":"3","G:\\react\\react-admin\\src\\pages\\login\\login.jsx":"4","G:\\react\\react-admin\\src\\pages\\admin\\admin.jsx":"5","G:\\react\\react-admin\\src\\api\\index.js":"6","G:\\react\\react-admin\\src\\api\\ajax.js":"7","G:\\react\\react-admin\\src\\utils\\memoryUtils.js":"8","G:\\react\\react-admin\\src\\components\\left-nav\\index.jsx":"9","G:\\react\\react-admin\\src\\components\\header\\index.jsx":"10","G:\\react\\react-admin\\src\\utils\\storageUtils.js":"11","G:\\react\\react-admin\\src\\pages\\category\\category.jsx":"12","G:\\react\\react-admin\\src\\pages\\charts\\bar.jsx":"13","G:\\react\\react-admin\\src\\pages\\home\\home.jsx":"14","G:\\react\\react-admin\\src\\pages\\role\\role.jsx":"15","G:\\react\\react-admin\\src\\pages\\charts\\pie.jsx":"16","G:\\react\\react-admin\\src\\pages\\charts\\line.jsx":"17","G:\\react\\react-admin\\src\\pages\\user\\user.jsx":"18","G:\\react\\react-admin\\src\\pages\\product\\product.jsx":"19","G:\\react\\react-admin\\src\\config\\menuConfig.js":"20","G:\\react\\react-admin\\src\\utils\\dateUtils.js":"21","G:\\react\\react-admin\\src\\components\\link-button\\index.jsx":"22","G:\\react\\react-admin\\src\\pages\\category\\add-form.jsx":"23","G:\\react\\react-admin\\src\\pages\\category\\update-form.jsx":"24","G:\\react\\react-admin\\src\\pages\\product\\home.jsx":"25","G:\\react\\react-admin\\src\\pages\\product\\detail.jsx":"26","G:\\react\\react-admin\\src\\pages\\product\\add-update.jsx":"27","G:\\react\\react-admin\\src\\utils\\constants.js":"28","G:\\react\\react-admin\\src\\pages\\product\\pictures-wall.jsx":"29","G:\\react\\react-admin\\src\\pages\\product\\rich-text-editor.jsx":"30","G:\\react\\react-admin\\src\\pages\\user\\user-form.jsx":"31"},{"size":715,"mtime":1611804909962,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":618,"mtime":1611584062869,"results":"35","hashOfConfig":"33"},{"size":3255,"mtime":1612343463955,"results":"36","hashOfConfig":"33"},{"size":1900,"mtime":1612252830128,"results":"37","hashOfConfig":"33"},{"size":2554,"mtime":1612843013946,"results":"38","hashOfConfig":"33"},{"size":800,"mtime":1611553033229,"results":"39","hashOfConfig":"33"},{"size":82,"mtime":1611803759060,"results":"40","hashOfConfig":"33"},{"size":3134,"mtime":1612322704160,"results":"41","hashOfConfig":"33"},{"size":2997,"mtime":1612025221927,"results":"42","hashOfConfig":"33"},{"size":767,"mtime":1611803739394,"results":"43","hashOfConfig":"33"},{"size":7596,"mtime":1612321824808,"results":"44","hashOfConfig":"33"},{"size":1489,"mtime":1612858717412,"results":"45","hashOfConfig":"33"},{"size":3620,"mtime":1612859272777,"results":"46","hashOfConfig":"33"},{"size":946,"mtime":1612027784937,"results":"47","hashOfConfig":"33"},{"size":3515,"mtime":1612858790956,"results":"48","hashOfConfig":"33"},{"size":1987,"mtime":1612858750501,"results":"49","hashOfConfig":"33"},{"size":4051,"mtime":1612849934781,"results":"50","hashOfConfig":"33"},{"size":663,"mtime":1612338357163,"results":"51","hashOfConfig":"33"},{"size":1086,"mtime":1612025260776,"results":"52","hashOfConfig":"33"},{"size":264,"mtime":1612020578714,"results":"53","hashOfConfig":"33"},{"size":211,"mtime":1612020629564,"results":"54","hashOfConfig":"33"},{"size":973,"mtime":1612256045330,"results":"55","hashOfConfig":"33"},{"size":714,"mtime":1612315521707,"results":"56","hashOfConfig":"33"},{"size":5028,"mtime":1612335638930,"results":"57","hashOfConfig":"33"},{"size":3538,"mtime":1612334269733,"results":"58","hashOfConfig":"33"},{"size":8141,"mtime":1612842440373,"results":"59","hashOfConfig":"33"},{"size":269,"mtime":1612324604712,"results":"60","hashOfConfig":"33"},{"size":3223,"mtime":1612490286572,"results":"61","hashOfConfig":"33"},{"size":1873,"mtime":1612333963237,"results":"62","hashOfConfig":"33"},{"size":1688,"mtime":1612857652802,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1pkjmsr",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\react\\react-admin\\src\\index.js",[],["140","141"],"G:\\react\\react-admin\\src\\reportWebVitals.js",[],"G:\\react\\react-admin\\src\\App.js",["142","143"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\nimport { Button,message } from 'antd'\nimport {BrowserRouter,Route, Switch} from'react-router-dom'\nimport Login from'./pages/login/login'\nimport Admin from'./pages/admin/admin'\n\nexport default class App extends Component{\n\n  alert=()=>{\n    message.success('success')\n  }\n  render(){\n    return (\n      <BrowserRouter>\n      <Switch>{/*只匹配其中一个 */}\n      <Route path='/login' component={Login}>\n\n      </Route>\n      <Route path='/' component={Admin}>\n\n      </Route>\n</Switch>\n      </BrowserRouter>\n    )\n  }\n};\n","G:\\react\\react-admin\\src\\pages\\login\\login.jsx",["144","145"],"import React from \"react\";\r\nimport \"./login.less\";\r\nimport { Form, Input, Button, Checkbox,message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { reqLogin } from \"../../api/index\";\r\nimport  memoryUtils from '../../utils/memoryUtils'\r\nclass Login extends React.Component {\r\n  formRef = React.createRef();\r\n  //pwdRef=React.createRef();\r\n  onFinish = (values) => {\r\n    console.log('v',values);\r\n    this.login(values[\"username\"], values[\"password\"]);\r\n  };\r\n\r\n  login = async (username, password) => {\r\n    console.log(\"发送登陆的ajax 请求\", username, password);\r\n    const result = await reqLogin(username, password);\r\n    console.log(\"login()\", result);\r\n    if (result.status === 0) {\r\n      // 提示登录成功\r\n      message.success(\"登录成功\", 2);\r\n      \r\n      // 保存用户登录信息\r\n      memoryUtils.user = result.data;\r\n      console.log(\"user\",memoryUtils.user)\r\n      // 跳转到主页面\r\n      this.props.history.replace(\"/\");\r\n    } else {\r\n      // 登录失败, 提示错误\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //const form=Form.form\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <h1>后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登录</h2>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={this.onFinish}\r\n            ref={this.formRef}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: \"Please input your Username!\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Username\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  type: \"string\",\r\n                  min: 4,\r\n                  max: 14,\r\n                  pattern: /^[a-zA-Z0-9_]+$/,\r\n                  message: \"密码不符合规范\",\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                <Checkbox>Remember me</Checkbox>\r\n              </Form.Item>\r\n\r\n              <a className=\"login-form-forgot\" href=\"\">\r\n                Forgot password\r\n              </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                Log in\r\n              </Button>\r\n              Or <a href=\"\">register now!</a>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","G:\\react\\react-admin\\src\\pages\\admin\\admin.jsx",[],"G:\\react\\react-admin\\src\\api\\index.js",["146"],"import ajax from \"./ajax\";\r\nimport jsonp from \"jsonp\";\r\n/*\r\n通过jsonp 请求获取天气信息\r\n*/\r\nexport function reqWeather(city) {\r\n  const url = `https://lbs.amap.com/api/webservice/guide/api/ipconfig`;\r\n  return new Promise((resolve, reject) => {\r\n    jsonp(\r\n      url,\r\n      {\r\n        param: \"callback\",\r\n      },\r\n      (error, response) => {\r\n        console.log(response);\r\n        if (!error && response.status == \"success\") {\r\n          const {\r\n            dayPictureUrl,\r\n            weather,\r\n          } = response.results[0].weather_data[0];\r\n          resolve({ dayPictureUrl, weather });\r\n        } else {\r\n          alert(\"获取天气信息失败\");\r\n        }\r\n      }\r\n    );\r\n  });\r\n}\r\n// 登陆\r\nexport const reqLogin = (username, password) =>\r\n  ajax(\"/login\", { username, password }, \"POST\");\r\n\r\nexport const reqCategorys = (parentId) =>\r\n  ajax(\"/manage/category/list\", { parentId },\"GET\");\r\n// 添加分类\r\nexport const reqAddCategory = (parentId, categoryName) =>\r\n  ajax(\r\n    \"/manage/category/add\",\r\n    {\r\n      parentId,\r\n      categoryName,\r\n    },\r\n    \"POST\"\r\n  );\r\n// 更新品类名称\r\nexport const reqUpdateCategory = ({ categoryId, categoryName }) =>\r\n  ajax(\r\n    \"/manage/category/update\",\r\n    {\r\n      categoryId,\r\n      categoryName,\r\n    },\r\n    \"POST\"\r\n  );\r\n\r\n// 根据分类ID 获取分类\r\nexport const reqCategory = (categoryId) =>\r\n  ajax(\"/manage/category/info\", { categoryId });\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) =>\r\n  ajax(\"/manage/product/list\", { pageNum, pageSize });\r\n\r\nexport const reqSearchProducts = ({\r\n  pageNum,\r\n  pageSize,\r\n  searchType,\r\n  searchName,\r\n}) =>\r\n  ajax(\"/manage/product/search\", {\r\n    pageNum,\r\n    pageSize,\r\n    [searchType]: searchName,\r\n  });\r\n// 添加/更新商品\r\nexport const reqAddOrUpdateProduct = (product) =>\r\n  ajax(\"/manage/product/\" + (product._id ? \"update\" : \"add\"), product, \"post\");\r\n// 对商品进行上架/下架处理\r\nexport const reqUpdateProductStatus = (productId, status) =>\r\n  ajax(\r\n    \"/manage/product/updateStatus\",\r\n    {\r\n      productId,\r\n      status,\r\n    },\r\n    \"POST\"\r\n  );\r\n// 删除图片\r\nexport const reqDeleteImg = (name) =>\r\n  ajax(\"/manage/img/delete\", { name }, \"post\");\r\n\r\nexport const reqAddOrUpdateUser = (user) => ajax('/manage/user/'+(user._id ? 'update' :\r\n'add'), user, 'POST')\r\n// 获取用户列表\r\nexport const reqUsers = () => ajax('/manage/user/list')\r\n// 删除用户\r\nexport const reqDeleteUser = (userId) => ajax('/manage/user/delete', {userId}, 'POST')","G:\\react\\react-admin\\src\\api\\ajax.js",[],"G:\\react\\react-admin\\src\\utils\\memoryUtils.js",["147"],"export default {\r\n    user: {} // 内存中保存登陆的user 信息对象\r\n    }","G:\\react\\react-admin\\src\\components\\left-nav\\index.jsx",["148","149","150","151"],"import React, { Component } from \"react\";\r\nimport \"./index.less\";\r\nimport { Menu, Switch, icon } from \"antd\";\r\nimport {\r\n  MailOutlined,\r\n  AppstoreOutlined,\r\n  SettingOutlined,\r\n  HomeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, withRouter,Redirect } from \"react-router-dom\";\r\nimport menuConfig from \"../../config/menuConfig\";\r\nconst { SubMenu } = Menu;\r\n\r\n/*\r\n左侧导航组件\r\n*/\r\n\r\nclass LeftNav extends Component {\r\n  state = {\r\n    theme: \"dark\",\r\n    current: \"1\",\r\n  };\r\n\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的path\r\n    const path = this.props.location.pathname;\r\n    return menuList.reduce((pre, item) => {\r\n      if (!item.children) {\r\n        pre.push(\r\n          <Menu.Item key={item.key}>\r\n            <Link to={item.key} icon={item.icon} title={item.title}></Link>\r\n          </Menu.Item>\r\n        );\r\n      } else {\r\n        pre.push(\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n                <icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        );\r\n        // 如果当前请求路由与当前菜单的某个子菜单的key 匹配, 将菜单的key 保存为openKey\r\n        if (item.children.find((cItem) => path.indexOf(cItem.key) === 0)) {\r\n          this.openKey = item.key;\r\n        }\r\n      }\r\n      return pre;\r\n    }, []);\r\n  };\r\n  handleClick = (e) => {\r\n    console.log(\"click \", e);\r\n    this.setState({\r\n      current: e.key,\r\n      \r\n    });\r\n   \r\n    //this.props.location.pathname=e.key\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to=\"/home\" className=\"logo-link\">\r\n          <h1>后台管理系统</h1>\r\n        </Link>\r\n        <Menu\r\n          theme={this.state.theme}\r\n          onClick={this.handleClick}\r\n          defaultOpenKeys={[\"sub1\"]}\r\n          selectedKeys={[this.state.current]}\r\n          mode=\"inline\"\r\n        >\r\n          <Menu.Item key=\"/home\" icon={<HomeOutlined />}>\r\n          <Link to={'/home'}></Link>\r\n            首页\r\n          </Menu.Item>\r\n\r\n        \r\n          <SubMenu key=\"/products\" icon={<MailOutlined />} title=\"商品\">\r\n            <Menu.Item key=\"/category\"><Link to={'/category'}>品类管理</Link></Menu.Item>\r\n            <Menu.Item key=\"/product\"><Link to={'/product'}>商品管理</Link></Menu.Item>{\" \"}\r\n          </SubMenu>\r\n          <Menu.Item key=\"/user\"><Link to={'/user'}>用户管理</Link></Menu.Item>\r\n          <Menu.Item key=\"/role\"><Link to={'/role'}>角色管理</Link></Menu.Item>\r\n\r\n          <SubMenu key=\"/charts\" icon={<AppstoreOutlined />} title=\"图形图表\">\r\n            <Menu.Item key=\"/charts/bar\"><Link to={'/charts/bar'}>柱形图</Link></Menu.Item>\r\n            <Menu.Item key=\"/charts/line\"><Link to={'/charts/line'}>折线图</Link></Menu.Item>\r\n            <Menu.Item key=\"/charts/pie\"><Link to={'/charts/pie'}>饼图</Link></Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(LeftNav)\r\n","G:\\react\\react-admin\\src\\components\\header\\index.jsx",["152","153","154"],"import React, { Component } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LinkButton from \"../link-button\";\r\nimport menuList from \"../../config/menuConfig\";\r\nimport { reqWeather } from \"../../api\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport \"./index.less\";\r\n/*\r\n头部组件\r\n*/\r\nclass Header extends Component {\r\n  state = {\r\n    sysTime: formateDate(Date.now()),\r\n    dayPictureUrl: \"\", // 天气图片的url\r\n    weather: \"\",\r\n  };\r\n  /*\r\n发异步ajax 获取天气数据并更新状态\r\n*/\r\n\r\n  getSysTime = () => {\r\n    this.intervalId = setInterval(() => {\r\n      this.setState({\r\n        sysTime: formateDate(Date.now()),\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname;\r\n    let title;\r\n    console.log(menuList)\r\n    Array.from(menuList).forEach((item) => {\r\n      if (item.key === path) {\r\n        // 如果当前item 对象的key 与path 一样,item 的title 就是需要\r\n\r\n        title = item.title;\r\n      } else if (item.children) {\r\n        // 在所有子item 中查找匹配的\r\n        const cItem = item.children.find(\r\n          (cItem) => path.indexOf(cItem.key) === 0\r\n        );\r\n        // 如果有值才说明有匹配的\r\n        if (cItem) {\r\n          // 取出它的title\r\n          title = cItem.title;\r\n        }\r\n      }\r\n    });\r\n    return title;\r\n  };\r\n  /*\r\n      退出登陆\r\n      */\r\n  logout = () => {\r\n    Modal.confirm({\r\n      content: \"确定退出吗?\",\r\n      onOk: () => {\r\n        console.log(\"OK\");\r\n        // 移除保存的user\r\n        storageUtils.removeUser();\r\n        memoryUtils.user = {};\r\n        // 跳转到login\r\n        this.props.history.replace(\"/login\");\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n  /*\r\n      根据请求的path 得到对应的标题\r\n      */\r\n\r\n  componentDidMount() {\r\n    this.getSysTime();\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId);\r\n  }\r\n  render() {\r\n    const { sysTime, dayPictureUrl, weather } = this.state;\r\n    // 得到当前用户\r\n    const user = memoryUtils.user;\r\n    // 得到当前请求的路径\r\n    const path = this.props.location.pathname;\r\n    // 得到对应的标题\r\n    const title = this.getTitle(path);\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎, {user.username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{sysTime}</span>\r\n  \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Header);\r\n","G:\\react\\react-admin\\src\\utils\\storageUtils.js",["155"],"import store from \"store\";\r\nconst USER_KEY = \"user_key\";\r\n/*\r\n包含n 个操作local storage 的工具函数的模块\r\n*/\r\nexport default {\r\n  saveUser(user) {\r\n    // localStroage 只能保存string, 如果传递是对象, 会自动调用对象的toString()并保存\r\n    //localStorage.setItem(USER_KEY, JSON.stringify(user)) // 保存的必须是对象的json 串\r\n    store.set(USER_KEY, user); // 内部会自动转换成json 再保存\r\n  },\r\n  getUser() {\r\n    // 如果存在, 需要返回的是对象, 如果没有值, 返回{}\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}') // [object, Object]\r\n    return store.get(USER_KEY) || {};\r\n  },\r\n  removeUser() {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY);\r\n  },\r\n};\r\n","G:\\react\\react-admin\\src\\pages\\category\\category.jsx",["156","157","158","159","160"],"import React, { Component } from \"react\";\r\nimport { Card, Table, Button, message, Modal } from \"antd\";\r\nimport {\r\n  StarOutlined,\r\n  StarFilled,\r\n  StarTwoTone,\r\n  CodeSandboxCircleFilled,\r\n} from \"@ant-design/icons\";\r\nimport UpdateForm from \"./update-form\";\r\nimport AddForm from \"./add-form\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { reqCategorys, reqAddCategory, reqUpdateCategory } from \"../../api\";\r\n/*\r\n分类管理路由组件\r\n*/\r\nexport default class Category extends Component {\r\n  state = {\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: \"0\", // 父分类的ID\r\n    parentName: \"\", // 父分类的名称\r\n    loading: false, // 标识是否正在加载中\r\n    showStatus: 0, // 是否显示对话框0: 都不显示, 1: 显示添加, 2: 显示更新\r\n    cate: \"\",\r\n    cateName: \"\",\r\n  };\r\n  /*\r\n根据parentId 异步获取分类列表显示\r\n*/\r\n  getCategorys = async (parentId) => {\r\n    // 更新loading 状态: 加载中\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    console.log(\"get\");\r\n    // 优先使用指定的parentId, 如果没有指定使用状态中的parentId\r\n    parentId = parentId || this.state.parentId;\r\n    // 异步获取分类列表\r\n    const result = await reqCategorys(parentId); // {status: 0, data: []}\r\n    console.log(\"par\", parentId);\r\n    // 更新loading 状态: 加载完成\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n    console.log(\"res\", result);\r\n    if (result.status === 0) {\r\n      const categorys = result.data;\r\n      if (parentId === \"0\") {\r\n        // 更新一级分类列表\r\n        this.setState({\r\n          categorys,\r\n        });\r\n        console.log(\"cate\", categorys);\r\n      } else {\r\n        // 更新二级分类列表\r\n        this.setState({\r\n          subCategorys: categorys,\r\n        });\r\n      }\r\n    } else {\r\n      // 获取列表失败\r\n      message.error(\"获取列表失败\");\r\n    }\r\n  };\r\n  /*\r\n    显示指定分类的子分类列表\r\n    */\r\n  showSubCates = (category) => {\r\n    // console.log('set 之前', this.state.parentId) // 0\r\n    // 更新状态: state 中的数据是异步更新(不会立即更新state 中的数据)\r\n    this.setState(\r\n      {\r\n        parentId: category._id,\r\n        parentName: category.name,\r\n      },\r\n      () => {\r\n        // 在状态更新之后执行, 在回调函数中能得到最新的状态数据\r\n        this.getCategorys();\r\n      }\r\n    );\r\n    // console.log('set 之后', this.state.parentId) // xxx\r\n  };\r\n  /*\r\n    显示一级列表\r\n    */\r\n  showCategorys = () => {\r\n    this.setState({\r\n      parentId: \"0\",\r\n      parentName: \"\",\r\n      subCategorys: [],\r\n      showStatus: 0,\r\n      form: {},\r\n    });\r\n  };\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1,\r\n    });\r\n  };\r\n  /*\r\n        显示修改的对话框\r\n        */\r\n  showUpdate = (category) => {\r\n    console.log('this',category)\r\n    // 保存category\r\n    this.category = category;\r\n    // 更新状态\r\n    this.setState({\r\n      showStatus: 2,\r\n    });\r\n  };\r\n  /*\r\n        添加分类\r\n        */\r\n  addCategory = async () => {\r\n    // 得到数据\r\n    // const { parentId, categoryName } = this.form.getFieldsValue();\r\n    // 关闭对话框\r\n    this.setState({\r\n      showStatus: 0,\r\n    });\r\n    // 重置表单\r\n    // this.form.resetFields();\r\n    // 异步请求添加分类\r\n    console.log(\"id\", this.state.cate);\r\n    console.log(this.state.cateName);\r\n    const result = await reqAddCategory(\r\n      this.state.cate,\r\n      this.state.cateName\r\n    );\r\n    if (result.status === 0) {\r\n      /*\r\n        添加一级分类\r\n        在当前分类列表下添加\r\n        */\r\n      if ( this.state.cate === this.state.parentId) {\r\n        this.getCategorys();\r\n      }\r\n    }\r\n  };\r\n  /*\r\n更新分类\r\n*/\r\n  updateCategory = async () => {\r\n    // 得到数据\r\n    const categoryId = this.state.cate._id;\r\n    const categoryName  = this.state.cateName;\r\n    // 关闭对话框\r\n    this.setState({\r\n      showStatus: 0,\r\n    });\r\n    console.log('id',this.state.cate._id)\r\n    // 重置表单\r\n //   this.form.resetFields();\r\n    // 异步请求更新分类\r\n    const result = await reqUpdateCategory({ categoryId, categoryName });\r\n    if (result.status === 0) {\r\n //     this.setState({ cate: \"\",cateName:\"\" });\r\n      // 重新获取列表\r\n      this.getCategorys();\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.columns = [\r\n      {\r\n        title: \"分类名称\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        width: 300,\r\n        render: (category) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>\r\n              修改分类\r\n            </LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            {this.state.parentId === \"0\" ? (\r\n              <LinkButton onClick={() => this.showSubCates(category)}>\r\n                查看子分类\r\n              </LinkButton>\r\n            ) : null}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  }\r\n  setFields(newFields) {\r\n    console.log(1,newFields);\r\n  }\r\n  componentDidMount() {\r\n    this.getCategorys();\r\n  }\r\n  render() {\r\n    // 从状态中取数据\r\n    const {\r\n      categorys,\r\n      subCategorys,\r\n      parentId,\r\n      parentName,\r\n      loading,\r\n      showStatus,\r\n      form,\r\n    } = this.state;\r\n    // 从组件对象中数据\r\n    const category = this.category || {};\r\n    // Card 的左侧标题\r\n    const title =\r\n      parentId === \"0\" ? (\r\n        \"一级分类列表\"\r\n      ) : (\r\n        <span>\r\n          <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>{\" \"}\r\n          &nbsp;&nbsp; &nbsp;&nbsp;\r\n          <span>{parentName}</span>\r\n        </span>\r\n      );\r\n    // Card 的右侧button\r\n    const extra = (\r\n      <Button type=\"primary\" onClick={this.showAdd}>\r\n        添加\r\n      </Button>\r\n    );\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={parentId === \"0\" ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          loading={loading}\r\n          pagination={{\r\n            pageSize: 5,\r\n            showQuickJumper: true,\r\n            showSizeChanger: true,\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus === 1}\r\n          onOk={this.addCategory}\r\n          onCancel={() => this.setState({ showStatus: 0 })}\r\n        >\r\n          <AddForm\r\n          categorys={this.state.categorys}\r\n        \r\n            parentId={this.state.parentId}\r\n            fields={this.state.name}\r\n            onChange={(newFields) => {\r\n             console.log('new',newFields[0].value)\r\n             this.setState({cate:newFields[0].value,cateName:newFields[1].value})\r\n            }}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"修改分类\"\r\n          visible={showStatus === 2}\r\n          onOk={this.updateCategory}\r\n          onCancel={() => {\r\n            this.setState({ showStatus: 0 });\r\n           // this.form.resetFields();\r\n          }}\r\n\r\n \r\n        >\r\n          <UpdateForm\r\n          //  categoryName={category.name}\r\n            category={this._id}\r\n            //setForm={(form) => (this.form = form)}         \r\n            \r\n            onChange={(newFields) => {\r\n            console.log('new',newFields[0].value)\r\n            this.setState({cate:category,cateName:newFields[0].value})\r\n           }}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","G:\\react\\react-admin\\src\\pages\\charts\\bar.jsx",[],"G:\\react\\react-admin\\src\\pages\\home\\home.jsx",["161","162","163","164","165","166","167","168","169","170","171","172"],"G:\\react\\react-admin\\src\\pages\\role\\role.jsx",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, { Component } from \"react\";\r\nimport { Redirect,Route,Switch} from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport memeoryUtils from \"../../utils/memoryUtils\";\r\nimport Header from \"../../components/header\";\r\nimport LeftNav from \"../../components/left-nav\";\r\n\r\nimport Home from \"../home/home\";\r\nimport Category from \"../category/category\";\r\nimport Product from \"../product/product\";\r\nimport Role from \"../role/role\";\r\nimport User from \"../user/user\";\r\nimport Bar from \"../charts/bar\";\r\nimport Line from \"../charts/line\";\r\nimport Pie from \"../charts/pie\";\r\n\r\n/*\r\n后台管理的路由组件\r\n*/\r\nconst { Footer, Sider, Content } = Layout;\r\nexport default class Admin extends Component {\r\n  render() {\r\n    const user = memeoryUtils.user;\r\n    console.log(user);\r\n    if (!user) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <div className=\"home\">\r\n      欢迎角色\r\n      </div>\r\n      )\r\n  }\r\n}\r\n","G:\\react\\react-admin\\src\\pages\\charts\\pie.jsx",[],"G:\\react\\react-admin\\src\\pages\\charts\\line.jsx",[],"G:\\react\\react-admin\\src\\pages\\user\\user.jsx",[],"G:\\react\\react-admin\\src\\pages\\product\\product.jsx",[],"G:\\react\\react-admin\\src\\config\\menuConfig.js",[],"G:\\react\\react-admin\\src\\utils\\dateUtils.js",[],"G:\\react\\react-admin\\src\\components\\link-button\\index.jsx",[],"G:\\react\\react-admin\\src\\pages\\category\\add-form.jsx",["188","189"],"import React, { Component } from \"react\";\r\nimport { Form, Select, Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n/*\r\n添加分类的Form 组件\r\n*/\r\nconst AddForm = ({ onChange, fields,categorys, parentId}) => {\r\n  return (\r\n    <Form\r\n      name=\"global_state\"\r\n      layout=\"inline\"\r\n      fields={fields}\r\n      onFieldsChange={(_, allFields) => {\r\n        onChange(allFields);\r\n      }}\r\n    >\r\n      <Item label=\"所属分类\" name=\"category\">\r\n        <Select>\r\n          <Option key=\"0\" value=\"0\">\r\n            一级分类\r\n          </Option>\r\n          {categorys.map((c) => (\r\n            <Option key={c._id} value={c._id}>\r\n              {c.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Item>\r\n      <Item label=\"分类名称\" name=\"categoryName\">\r\n        <Input placeholder=\"请输入分类名称\" />\r\n      </Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default AddForm;\r\n","G:\\react\\react-admin\\src\\pages\\category\\update-form.jsx",["190","191","192"],"\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Form, Select, Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n/*\r\n添加分类的Form 组件\r\n*/\r\nconst UpdateForm = ({ onChange, fields,categoryName,parentId}) => {\r\n  return (\r\n    <Form\r\n      name=\"global_state\"\r\n      layout=\"inline\"\r\n      fields={fields}\r\n      categoryName={categoryName}\r\n      parentId={parentId}\r\n      onFieldsChange={(_, allFields) => {\r\n        onChange(allFields);\r\n      }}\r\n    >\r\n      <Item label=\"分类名称\" name=\"categoryName\">\r\n        <Input placeholder=\"请输入分类名称\" />\r\n      </Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default UpdateForm;\r\n","G:\\react\\react-admin\\src\\pages\\product\\home.jsx",[],"G:\\react\\react-admin\\src\\pages\\product\\detail.jsx",["193","194","195"],"import React, { Component } from \"react\";\r\nimport { List,  Card } from \"antd\";\r\nimport { reqCategory } from \"../../api\";\r\nimport { BASE_IMG_PATH } from \"../../utils/constants\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { StarOutlined, StarFilled, StarTwoTone,DoubleLeftOutlined } from '@ant-design/icons';\r\n/*\r\n商品详情组件\r\n*/\r\nexport default class ProductDetail extends Component {\r\n  state = {\r\n    cName1: \"\", // 一级分类名称\r\n    cName2: \"\", // 二级分类名称\r\n  };\r\n  /*\r\n异步获取当前产品对应的分类名称\r\n*/\r\n  getCategoryName = async () => {\r\n    const { categoryId, pCategoryId } = this.props.location.state;\r\n    if (pCategoryId === \"0\") {\r\n      // 获取一级分类名称\r\n      const result = await reqCategory(categoryId);\r\n      const cName1 = result.data.name;\r\n      this.setState({ cName1 });\r\n    } else {\r\n      // 获取一级分类名称\r\n      /*const result1 = await reqCategory(pCategoryId)\r\nconst cName1 = result1.data.name\r\n// 获取二级分类名称\r\nconst result2 = await reqCategory(categoryId)\r\nconst cName2 = result2.data.name\r\nthis.setState({cName1, cName2})*/\r\n      /*\r\n一次发多个请求, 等所有请求都返回后一起处理, 如果有一个请求出错了, 整个都会失败\r\nPromise.all([promise1, promise2]) 返回值一个promise 对象, 异步成功返回的是\r\n[result1, result2]\r\n*/\r\n      const results = await Promise.all([\r\n        reqCategory(pCategoryId),\r\n        reqCategory(categoryId),\r\n      ]);\r\n      const result1 = results[0];\r\n      const result2 = results[1];\r\n      const cName1 = result1.data.name;\r\n      const cName2 = result2.data.name;\r\n      this.setState({ cName1, cName2 });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getCategoryName();\r\n  }\r\n\r\n  render() {\r\n    const { name, desc, price, imgs, detail } = this.props.location.state;\r\n    const { cName1, cName2 } = this.state;\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n        <DoubleLeftOutlined />\r\n        </LinkButton>\r\n        &nbsp;&nbsp;商品详情\r\n      </span>\r\n    );\r\n    const imgStyle = {\r\n      width: 150,\r\n      height: 150,\r\n      marginRight: 10,\r\n      border: \"1px solid black\",\r\n    };\r\n    return (\r\n      <Card className=\"product-detail\" title={title}>\r\n        <List>\r\n          <List.Item>\r\n            <span className=\"left\">商品名称:</span>\r\n            <span>{name}</span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className=\"left\">商品描述:</span>\r\n            <span>{desc}</span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className=\"left\">商品价格:</span>\r\n            <span>{price + \"元\"}</span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className=\"left\">所属分类:</span>\r\n            <span>{cName1 + (cName2 ? \" --> \" + cName2 : \"\")}</span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className=\"left\">商品图片:</span>\r\n            <span>\r\n              {imgs.map((img) => (\r\n                <img\r\n                  src={BASE_IMG_PATH + img}\r\n                  alt=\"img\"\r\n                  key={img}\r\n                  style={imgStyle}\r\n                />\r\n              ))}\r\n            </span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className=\"left\">商品详情:</span>\r\n            <div dangerouslySetInnerHTML={{ __html: detail }}></div>\r\n          </List.Item>\r\n        </List>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","G:\\react\\react-admin\\src\\pages\\product\\add-update.jsx",["196","197","198","199"],"import React, { Component } from \"react\";\r\nimport { Card,  Form, Input, Cascader, Button, message } from \"antd\";\r\nimport { StarOutlined, StarFilled, StarTwoTone,DoubleLeftOutlined } from '@ant-design/icons';\r\nimport LinkButton from \"../../components/link-button\";\r\nimport PicturesWall from \"./pictures-wall\";\r\nimport RichTextEditor from \"./rich-text-editor\";\r\nimport { reqCategorys, reqAddOrUpdateProduct } from \"../../api\";\r\nconst { Item } = Form;\r\nconst { TextArea } = Input;\r\n/*\r\n商品添加/更新的路由组件\r\n*/\r\nclass ProductAddUpdate extends Component {\r\n  state = {\r\n    options: [], // 用来显示级联列表的数组\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.pw = React.createRef();\r\n    this.editor = React.createRef();\r\n  }\r\n  /*\r\n选择某个分类项时的回调\r\n加载对应的二级分类显示\r\n*/\r\n  loadData = async (selectedOptions) => {\r\n    // console.log('loadDate()', selectedOptions)\r\n    const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    targetOption.loading = true;\r\n    // 异步请求获取对应的二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value); // await 的作用: 保证完成执行完保存的分类数组才进入后面的语句;\r\n    targetOption.loading = false; // 隐藏loading\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      // 有子分类\r\n      // 生成一个二级的options\r\n      const cOptions = subCategorys.map((c) => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n      // 添加为对应的option 的children(子options)\r\n      targetOption.children = cOptions;\r\n    } else {\r\n      // 没有子分类\r\n      targetOption.isLeaf = true;\r\n    }\r\n    // 更新options 状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    });\r\n  };\r\n  /*\r\n获取指定分类id 的子分类列表\r\n如果parentId 为0 时获取一级列表\r\n*/\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId);\r\n    if (result.status === 0) {\r\n      const categorys = result.data;\r\n      if (parentId === \"0\") {\r\n        // 根据一级分类数组初始化生成options 数组\r\n        this.initOptions(categorys);\r\n      } else {\r\n        // 当前得到是二级分类列表\r\n        // 返回二级分类列表(作为async 函数的promise 对象的成功的value 值)\r\n        return categorys;\r\n      }\r\n    }\r\n  };\r\n  /*\r\n生成级联的一级列表\r\n*/\r\n  initOptions = async (categorys) => {\r\n    // 根据一级分类数组生成option 的数组\r\n    const options = categorys.map((c) => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false,\r\n    }));\r\n    // 如果当前是更新, 且商品是一个二级分类的商品\r\n    const { product, isUpdate } = this;\r\n    if (isUpdate && product.pCategoryId !== \"0\") {\r\n      // 异步获取product.pCategoryId 的二级分类列表\r\n      const subCategorys = await this.getCategorys(product.pCategoryId);\r\n      if (subCategorys && subCategorys.length > 0) {\r\n        // 生成二级的option 数组\r\n        const cOptions = subCategorys.map((c) => ({\r\n          value: c._id,\r\n          label: c.name,\r\n          isLeaf: true,\r\n        }));\r\n        // 找到对应的option\r\n        const targetOption = options.find(\r\n          (option) => option.value === product.pCategoryId\r\n        );\r\n        // 将cOptions 添加为对应的一级option 的children\r\n        targetOption.children = cOptions;\r\n      }\r\n    }\r\n    // 更新状态\r\n    this.setState({\r\n      options,\r\n    });\r\n  };\r\n\r\n  validatePrice = (rule, value, callback) => {\r\n    value = value * 1;\r\n    if (value > 0) {\r\n      callback();\r\n    } else {\r\n      callback(\"价格必须是大于0 的数值\");\r\n    }\r\n  };\r\n  // 添加/更新\r\n   submit = async (values) => {\r\n      console.log(values)\r\n      \r\n      const { name, desc, price, categoryIds } = values; \r\n      \r\n      const imgs = this.pw.current.getImgs();\r\n        const detail = this.editor.current.getDetail();        \r\n        \r\n        let pCategoryId = \"\";\r\n        let categoryId = \"\";\r\n        if (categoryIds.length === 1) {\r\n          // 选择的是一级分类\r\n          pCategoryId = \"0\";\r\n          categoryId = categoryIds[0];\r\n        } else {\r\n          // 选择的是二级分类\r\n          pCategoryId = categoryIds[0];\r\n          categoryId = categoryIds[1];\r\n        }\r\n        // 封装成对象\r\n        const product = {\r\n          name,\r\n          desc,\r\n          price,\r\n          pCategoryId,\r\n          categoryId,\r\n          detail,\r\n          imgs,\r\n        }; \r\n        \r\n        if (this.isUpdate) {\r\n          product._id = this.product._id;\r\n        }\r\n        \r\n        const result = await reqAddOrUpdateProduct(product);\r\n        if (result.status === 0) {\r\n          message.success(\"保存商品成功\");\r\n          this.props.history.goBack();\r\n        } else {\r\n          message.success(\"保存商品失败\");\r\n        }\r\n      \r\n   // this.props.form.validateFields(async (err, values) => {\r\n   /*   if (!err) {\r\n        // 收集产品相关信息\r\n        \r\n        // 在父组件中得到子组件对象, 调用子组件对象的方法\r\n       \r\n\r\n        // 如果是更新, 指定product 的_id 属性值\r\n       \r\n        // 请求保存\r\n        \r\n    */\r\n  };\r\n  componentDidMount() {\r\n    // 异步获取一级分类列表\r\n    this.getCategorys(\"0\");\r\n  }\r\n  componentWillMount() {\r\n    // 取出跳转传入的数据\r\n    const product = this.props.location.state;\r\n    this.product = product || {};\r\n    this.isUpdate = !!product; // !!xxx 将一个数据强制转换成布尔类型\r\n  }\r\n  render() {\r\n    const { product, isUpdate } = this;\r\n    const { pCategoryId, categoryId } = product;\r\n    const { options } = this.state;\r\n  //  const { getFieldDecorator } = this.props.form;\r\n    // 准备用于级联列表显示的数组\r\n    const categoryIds = [];\r\n    if (isUpdate) {\r\n      if (pCategoryId === \"0\") {\r\n        categoryIds.push(categoryId);\r\n      } else {\r\n        categoryIds.push(pCategoryId);\r\n        categoryIds.push(categoryId);\r\n      }\r\n    }\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n        <DoubleLeftOutlined />\r\n        </LinkButton>\r\n        {isUpdate ? \"修改商品\" : \"添加商品\"}\r\n      </span>\r\n    );\r\n    // 指定form 的item 布局的对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 8 },\r\n    };\r\n    return (\r\n      <Card title={title}>\r\n        <Form onFinish={this.submit}>\r\n          <Form.Item name=\"name\" label=\"商品名称\" {...formItemLayout}>\r\n         <Input defaultValue={this.product.name}placeholer=\"请输入商品名称\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"desc\"  label=\"商品描述\" {...formItemLayout}>\r\n           <TextArea defaultValue={this.product.desc} placeholder=\"请输入商品描述\" autosize />\r\n          </Form.Item>\r\n          <Form.Item name=\"price\" label=\"商品价格\" {...formItemLayout}>\r\n           \r\n              <Input \r\n                type=\"number\"\r\n                placeholer=\"请输入商品价格\"\r\n                addonAfter=\"元\"\r\n                defaultValue={this.product.price}\r\n              />\r\n            \r\n          </Form.Item>\r\n          <Form.Item name=\"categoryIds\"  label=\"商品分类\" {...formItemLayout}>\r\n           <Cascader options={options} defaultValue={this.product.categoryId} loadData={this.loadData} />\r\n          </Form.Item>\r\n          <Form.Item name=\"ppic\" label=\"商品图片\" {...formItemLayout}>\r\n            <PicturesWall ref={this.pw} imgs={product.imgs} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"商品详情\"\r\n            labelCol={{ span: 2 }}\r\n            wrapperCol={{ span: 20 }}name=\"pdetail\"\r\n          >\r\n            <RichTextEditor  ref={this.editor} detail={product.detail} />\r\n          </Form.Item>\r\n          <Button type=\"primary\"  htmlType=\"submit\">\r\n            提交\r\n          </Button>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default ProductAddUpdate;\r\n","G:\\react\\react-admin\\src\\utils\\constants.js",[],"G:\\react\\react-admin\\src\\pages\\product\\pictures-wall.jsx",[],"G:\\react\\react-admin\\src\\pages\\product\\rich-text-editor.jsx",[],"G:\\react\\react-admin\\src\\pages\\user\\user-form.jsx",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":1,"column":8,"nodeType":"206","messageId":"207","endLine":1,"endColumn":12},{"ruleId":"204","severity":1,"message":"208","line":4,"column":10,"nodeType":"206","messageId":"207","endLine":4,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":86,"column":15,"nodeType":"211","endLine":86,"endColumn":56},{"ruleId":"209","severity":1,"message":"210","line":99,"column":18,"nodeType":"211","endLine":99,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":16,"column":39,"nodeType":"214","messageId":"215","endLine":16,"endColumn":41},{"ruleId":"216","severity":1,"message":"217","line":1,"column":1,"nodeType":"218","endLine":3,"endColumn":6},{"ruleId":"204","severity":1,"message":"219","line":3,"column":16,"nodeType":"206","messageId":"207","endLine":3,"endColumn":22},{"ruleId":"204","severity":1,"message":"220","line":7,"column":3,"nodeType":"206","messageId":"207","endLine":7,"endColumn":18},{"ruleId":"204","severity":1,"message":"221","line":10,"column":27,"nodeType":"206","messageId":"207","endLine":10,"endColumn":35},{"ruleId":"204","severity":1,"message":"222","line":11,"column":8,"nodeType":"206","messageId":"207","endLine":11,"endColumn":18},{"ruleId":"204","severity":1,"message":"223","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":20},{"ruleId":"204","severity":1,"message":"224","line":88,"column":22,"nodeType":"206","messageId":"207","endLine":88,"endColumn":35},{"ruleId":"204","severity":1,"message":"225","line":88,"column":37,"nodeType":"206","messageId":"207","endLine":88,"endColumn":44},{"ruleId":"216","severity":1,"message":"217","line":6,"column":1,"nodeType":"218","endLine":21,"endColumn":3},{"ruleId":"204","severity":1,"message":"226","line":4,"column":3,"nodeType":"206","messageId":"207","endLine":4,"endColumn":15},{"ruleId":"204","severity":1,"message":"227","line":5,"column":3,"nodeType":"206","messageId":"207","endLine":5,"endColumn":13},{"ruleId":"204","severity":1,"message":"228","line":6,"column":3,"nodeType":"206","messageId":"207","endLine":6,"endColumn":14},{"ruleId":"204","severity":1,"message":"229","line":7,"column":3,"nodeType":"206","messageId":"207","endLine":7,"endColumn":26},{"ruleId":"204","severity":1,"message":"230","line":204,"column":7,"nodeType":"206","messageId":"207","endLine":204,"endColumn":11},{"ruleId":"204","severity":1,"message":"221","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":18},{"ruleId":"204","severity":1,"message":"231","line":2,"column":20,"nodeType":"206","messageId":"207","endLine":2,"endColumn":25},{"ruleId":"204","severity":1,"message":"219","line":2,"column":27,"nodeType":"206","messageId":"207","endLine":2,"endColumn":33},{"ruleId":"204","severity":1,"message":"232","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"233","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":20},{"ruleId":"204","severity":1,"message":"234","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":14},{"ruleId":"204","severity":1,"message":"235","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":15},{"ruleId":"204","severity":1,"message":"236","line":8,"column":8,"nodeType":"206","messageId":"207","endLine":8,"endColumn":16},{"ruleId":"204","severity":1,"message":"237","line":9,"column":8,"nodeType":"206","messageId":"207","endLine":9,"endColumn":15},{"ruleId":"204","severity":1,"message":"238","line":10,"column":8,"nodeType":"206","messageId":"207","endLine":10,"endColumn":12},{"ruleId":"204","severity":1,"message":"239","line":11,"column":8,"nodeType":"206","messageId":"207","endLine":11,"endColumn":12},{"ruleId":"204","severity":1,"message":"240","line":14,"column":8,"nodeType":"206","messageId":"207","endLine":14,"endColumn":11},{"ruleId":"204","severity":1,"message":"231","line":2,"column":19,"nodeType":"206","messageId":"207","endLine":2,"endColumn":24},{"ruleId":"204","severity":1,"message":"219","line":2,"column":25,"nodeType":"206","messageId":"207","endLine":2,"endColumn":31},{"ruleId":"204","severity":1,"message":"234","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":14},{"ruleId":"204","severity":1,"message":"235","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":15},{"ruleId":"204","severity":1,"message":"241","line":8,"column":8,"nodeType":"206","messageId":"207","endLine":8,"endColumn":12},{"ruleId":"204","severity":1,"message":"236","line":9,"column":8,"nodeType":"206","messageId":"207","endLine":9,"endColumn":16},{"ruleId":"204","severity":1,"message":"237","line":10,"column":8,"nodeType":"206","messageId":"207","endLine":10,"endColumn":15},{"ruleId":"204","severity":1,"message":"238","line":11,"column":8,"nodeType":"206","messageId":"207","endLine":11,"endColumn":12},{"ruleId":"204","severity":1,"message":"239","line":12,"column":8,"nodeType":"206","messageId":"207","endLine":12,"endColumn":12},{"ruleId":"204","severity":1,"message":"242","line":13,"column":8,"nodeType":"206","messageId":"207","endLine":13,"endColumn":11},{"ruleId":"204","severity":1,"message":"243","line":14,"column":8,"nodeType":"206","messageId":"207","endLine":14,"endColumn":12},{"ruleId":"204","severity":1,"message":"240","line":15,"column":8,"nodeType":"206","messageId":"207","endLine":15,"endColumn":11},{"ruleId":"204","severity":1,"message":"244","line":20,"column":9,"nodeType":"206","messageId":"207","endLine":20,"endColumn":15},{"ruleId":"204","severity":1,"message":"245","line":20,"column":17,"nodeType":"206","messageId":"207","endLine":20,"endColumn":22},{"ruleId":"204","severity":1,"message":"246","line":20,"column":24,"nodeType":"206","messageId":"207","endLine":20,"endColumn":31},{"ruleId":"204","severity":1,"message":"247","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"248","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":17},{"ruleId":"204","severity":1,"message":"247","line":3,"column":17,"nodeType":"206","messageId":"207","endLine":3,"endColumn":26},{"ruleId":"204","severity":1,"message":"248","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":17},{"ruleId":"204","severity":1,"message":"249","line":7,"column":7,"nodeType":"206","messageId":"207","endLine":7,"endColumn":13},{"ruleId":"204","severity":1,"message":"226","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":22},{"ruleId":"204","severity":1,"message":"227","line":6,"column":24,"nodeType":"206","messageId":"207","endLine":6,"endColumn":34},{"ruleId":"204","severity":1,"message":"228","line":6,"column":36,"nodeType":"206","messageId":"207","endLine":6,"endColumn":47},{"ruleId":"204","severity":1,"message":"226","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":22},{"ruleId":"204","severity":1,"message":"227","line":3,"column":24,"nodeType":"206","messageId":"207","endLine":3,"endColumn":34},{"ruleId":"204","severity":1,"message":"228","line":3,"column":36,"nodeType":"206","messageId":"207","endLine":3,"endColumn":47},{"ruleId":"204","severity":1,"message":"250","line":8,"column":9,"nodeType":"206","messageId":"207","endLine":8,"endColumn":13},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Switch' is defined but never used.","'SettingOutlined' is defined but never used.","'Redirect' is defined but never used.","'menuConfig' is defined but never used.","'reqWeather' is defined but never used.","'dayPictureUrl' is assigned a value but never used.","'weather' is assigned a value but never used.","'StarOutlined' is defined but never used.","'StarFilled' is defined but never used.","'StarTwoTone' is defined but never used.","'CodeSandboxCircleFilled' is defined but never used.","'form' is assigned a value but never used.","'Route' is defined but never used.","'Layout' is defined but never used.","'memeoryUtils' is defined but never used.","'Header' is defined but never used.","'LeftNav' is defined but never used.","'Category' is defined but never used.","'Product' is defined but never used.","'Role' is defined but never used.","'User' is defined but never used.","'Pie' is defined but never used.","'Home' is defined but never used.","'Bar' is defined but never used.","'Line' is defined but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Content' is assigned a value but never used.","'Component' is defined but never used.","'PropTypes' is defined but never used.","'Option' is assigned a value but never used.","'Item' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]